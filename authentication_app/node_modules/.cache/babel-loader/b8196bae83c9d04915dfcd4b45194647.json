{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/capstone/authentication_methods/authentication_app/src/routes/signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport \"../styles/Login.css\";\nimport { useState, useEffect } from 'react'; // components\n\nimport PasswordStrength from './components/password-strength';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  });\n  const [PasswordStrength, setPAsswordStrength] = useState(0); // password strength is updated\n\n  useEffect(() => {\n    console.log(\"password strength:\", PasswordStrength);\n  }, [PasswordStrength]); // function handles change in user credentials\n\n  function handleChange(event) {\n    let id = event.target.id;\n    let value = event.target.value;\n\n    if (id === 'password') {\n      let strength = calculatePasswordStrength(value); // get password strength\n\n      setPAsswordStrength(strength); // update password strength\n    }\n\n    setCredentials({ ...credentials,\n      [id]: value\n    });\n  } // function calculates password strength\n  // we initialise a counter variable (strength) for calculating\n  // the strength as an integer\n  // the higher the number, the stringer the password value is.\n  // The password  gains 1 point for each of the following\n  // - password contains at least 8 characters\n  // - contains a capital letter\n  // - contains a small case letter\n  // - contains a number\n  // - contains a special character\n  // The password strength ranges from 0 to 5.\n\n\n  function calculatePasswordStrength(password_value) {\n    let value = password_value;\n    var strength = 0;\n    var lengthCheck = false; // password has a minimum length of 8 characters\n\n    var capitalLetterCheck = false; // password contain at least 1 capital letter\n\n    var smallCaseLetterCheck = false; // password has a at least 1 small case letter\n\n    var numberCheck = false; // password contain at least 1 number\n\n    var specialCharacterCheck = false; // passwrod contain as least 1 special character\n    // check whether password length is at least 8 characters\n\n    if (password_value.length >= 8) lengthCheck = true; // iterate through password string character by character\n\n    for (var i = 0; i < password_value.length; i++) {\n      // password contains capital letter(s)\n      if (password_value.charCodeAt(i) < 91 && password_value.charCodeAt(i) > 64) capitalLetterCheck = true; // password contains small case letter(s)\n      else if (password_value.charCodeAt(i) < 123 && password_value.charCodeAt(i) > 96) smallCaseLetterCheck = true; // password contains number(s)\n        else if (password_value.charCodeAt(i) < 58 && password_value.charCodeAt(i) > 47) numberCheck = true; // password contains special characters(s)\n          else if (password_value.charCodeAt(i) < 32 && password_value.charCodeAt(i) > 47 || password_value.charCodeAt(i) < 65 && password_value.charCodeAt(i) > 57 || password_value.charCodeAt(i) < 97 && password_value.charCodeAt(i) > 90 || password_value.charCodeAt(i) < 127 && password_value.charCodeAt(i) > 122) specialCharacterCheck = true;\n    } // calculate strength points.\n    // To calculate strength points, we add the booleans checks to an array\n    // and iterate through that array\n    // each \"true\" check counts as 1 point\n\n\n    let checkArr = [lengthCheck, capitalLetterCheck, smallCaseLetterCheck, numberCheck, specialCharacterCheck];\n\n    for (var i = 0; i < checkArr.length; i++) {\n      if (checkArr[i] === true) strength++;\n    }\n\n    return strength;\n  } // function handles form submission\n\n\n  function handleSubmit(event) {\n    console.log(credentials);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-box flex-column\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"align-self-center\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Enter username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"password-strength\",\n        children: /*#__PURE__*/_jsxDEV(PasswordStrength, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"label\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"confirm_password\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Re-enter password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enter-btn\",\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"H9txuTA6Ls2zq+oW9SMbkbQNdx0=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/dhaneshen/Documents/capstone/authentication_methods/authentication_app/src/routes/signup.js"],"names":["React","ReactDom","useState","useEffect","PasswordStrength","Signup","credentials","setCredentials","username","password","confirm_password","setPAsswordStrength","console","log","handleChange","event","id","target","value","strength","calculatePasswordStrength","password_value","lengthCheck","capitalLetterCheck","smallCaseLetterCheck","numberCheck","specialCharacterCheck","length","i","charCodeAt","checkArr","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport \"../styles/Login.css\";\nimport {useState, useEffect} from 'react';\n\n// components\nimport PasswordStrength from './components/password-strength';\n\nexport default function Signup(){\n    const [credentials, setCredentials] = useState({username:\"\", password:\"\", confirm_password:\"\"})\n    const [PasswordStrength, setPAsswordStrength] = useState(0);\n\n    // password strength is updated\n    useEffect(() => {\n        console.log(\"password strength:\", PasswordStrength);\n    }, [PasswordStrength])\n\n    // function handles change in user credentials\n    function handleChange(event){\n        let id = event.target.id;\n        let value = event.target.value;\n\n        if (id === 'password'){\n            let strength = calculatePasswordStrength(value); // get password strength\n            setPAsswordStrength(strength); // update password strength\n        }\n\n        setCredentials({\n            ...credentials,\n            [id]: value\n        })\n    }\n\n\n    // function calculates password strength\n    // we initialise a counter variable (strength) for calculating\n    // the strength as an integer\n    // the higher the number, the stringer the password value is.\n    // The password  gains 1 point for each of the following\n    // - password contains at least 8 characters\n    // - contains a capital letter\n    // - contains a small case letter\n    // - contains a number\n    // - contains a special character\n    // The password strength ranges from 0 to 5.\n    function calculatePasswordStrength(password_value){\n        let value = password_value;\n        var strength = 0;\n        var lengthCheck = false;    // password has a minimum length of 8 characters\n        var capitalLetterCheck = false; // password contain at least 1 capital letter\n        var smallCaseLetterCheck = false;   // password has a at least 1 small case letter\n        var numberCheck = false;    // password contain at least 1 number\n        var specialCharacterCheck = false;  // passwrod contain as least 1 special character\n\n        // check whether password length is at least 8 characters\n        if (password_value.length >= 8)\n            lengthCheck = true;\n\n        // iterate through password string character by character\n        for (var i=0; i<password_value.length; i++){\n            // password contains capital letter(s)\n            if (password_value.charCodeAt(i) < 91 && password_value.charCodeAt(i) > 64)\n                capitalLetterCheck = true;\n            // password contains small case letter(s)\n            else if (password_value.charCodeAt(i) < 123 && password_value.charCodeAt(i) > 96)\n                smallCaseLetterCheck = true;\n            // password contains number(s)\n            else if (password_value.charCodeAt(i) < 58 && password_value.charCodeAt(i) > 47)\n                numberCheck = true;\n            // password contains special characters(s)\n            else if ((password_value.charCodeAt(i) < 32 && password_value.charCodeAt(i) > 47) || (password_value.charCodeAt(i) < 65 && password_value.charCodeAt(i) > 57) ||\n            (password_value.charCodeAt(i) < 97 && password_value.charCodeAt(i) > 90) || (password_value.charCodeAt(i) < 127 && password_value.charCodeAt(i) > 122))\n                specialCharacterCheck = true;\n        }\n\n        // calculate strength points.\n        // To calculate strength points, we add the booleans checks to an array\n        // and iterate through that array\n        // each \"true\" check counts as 1 point\n        let checkArr = [lengthCheck, capitalLetterCheck, smallCaseLetterCheck, numberCheck, specialCharacterCheck];\n        for (var i=0; i<checkArr.length; i++){\n            if (checkArr[i] === true)\n                strength++;\n        }\n\n        return strength\n    }\n\n    // function handles form submission\n    function handleSubmit(event){\n        console.log(credentials);\n    }\n\n\n    return(\n        <div className=\"container\">\n            <form className=\"login-box flex-column\" onSubmit={handleSubmit}>\n                <h1 className=\"align-self-center\">Sign up</h1>\n                <label htmlFor=\"username\" className=\"label\">Username</label>\n                <input id=\"username\" type=\"text\" name=\"username\" placeholder=\"Enter username\" onChange={handleChange}/>\n                <label htmlFor=\"password\" className=\"label\">Password</label>\n                <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange}/>\n                <div id=\"password-strength\">\n                    <PasswordStrength/>\n                </div>\n                <label htmlFor=\"password\" className=\"label\">Confirm Password</label>\n                <input id=\"confirm_password\" type=\"password\" name=\"password\" placeholder=\"Re-enter password\" onChange={handleChange}/>\n                <button className=\"enter-btn\" type=\"submit\">Enter</button>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}